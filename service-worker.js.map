{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/service-worker-code.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","importScripts","version_num","versions","cacheScope","String","startsWith","searchString","position","this","substr","length","dbPromise","idb","open","self","addEventListener","event","waitUntil","caches","keys","then","Promise","all","filter","old_caches","console","log","forEach","index","parseInt","indexOf","Math","max","apply","isFinite","toString","cache","addAll","request","method","respondWith","match","response","fetchRequestToDB","clone","db","transaction","objectStore","storeIndex","idbResponse","Response","store_response","catch","e","error","fetchRequest","fetch","status","type","json","resp","tx_write","put","store_request","complete","endsWith","map","delete"],"mappings":"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","file":"service-worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","importScripts( '/js/idb.js' );\r\n\r\nvar versions = [];\r\nvar old_caches = [];\r\nvar version_num;\r\n\r\nvar cacheScope = [\r\n\t\t'/',\r\n        '/index.html',\r\n        '/restaurant.html',\r\n\t\t'/css/styles_all.css',\r\n\t\t'/images/icons/star.png',\r\n\t\t'/images/icons/blankstar.png',\r\n\t\t'/images/1-200_small.jpg',\r\n\t\t'/images/2-200_small.jpg',\r\n\t\t'/images/3-200_small.jpg',\r\n\t\t'/images/4-200_small.jpg',\r\n\t\t'/images/5-200_small.jpg',\r\n\t\t'/images/6-200_small.jpg',\r\n\t\t'/images/7-200_small.jpg',\r\n\t\t'/images/8-200_small.jpg',\r\n\t\t'/images/9-200_small.jpg',\r\n\t\t'/images/10-200_small.jpg',\r\n\t\t'/images/1-400_mid.jpg',\r\n\t\t'/images/2-400_mid.jpg',\r\n\t\t'/images/3-400_mid.jpg',\r\n\t\t'/images/4-400_mid.jpg',\r\n\t\t'/images/5-400_mid.jpg',\r\n\t\t'/images/6-400_mid.jpg',\r\n\t\t'/images/7-400_mid.jpg',\r\n\t\t'/images/8-400_mid.jpg',\r\n\t\t'/images/9-400_mid.jpg',\r\n\t\t'/images/10-400_mid.jpg',\r\n\t\t'/images/1-100pc_big.jpg',\r\n\t\t'/images/2-100pc_big.jpg',\r\n\t\t'/images/3-100pc_big.jpg',\r\n\t\t'/images/4-100pc_big.jpg',\r\n\t\t'/images/5-100pc_big.jpg',\r\n\t\t'/images/6-100pc_big.jpg',\r\n\t\t'/images/7-100pc_big.jpg',\r\n\t\t'/images/8-100pc_big.jpg',\r\n\t\t'/images/9-100pc_big.jpg',\r\n\t\t'/images/10-100pc_big.jpg',\r\n\t\t'/images/1-100pc_big.webp',\r\n\t\t'/images/2-100pc_big.webp',\r\n\t\t'/images/3-100pc_big.webp',\r\n\t\t'/images/4-100pc_big.webp',\r\n\t\t'/images/5-100pc_big.webp',\r\n\t\t'/images/7-100pc_big.webp',\r\n\t\t'/images/8-100pc_big.webp',\r\n\t\t'/images/9-100pc_big.webp',\r\n\t\t'/images/10-100pc_big.webp',\r\n\t\t'/images/1-400_mid.webp',\r\n\t\t'/images/3-400_mid.webp',\r\n\t\t'/images/5-400_mid.webp',\r\n\t\t'/images/7-400_mid.webp',\r\n\t\t'/images/9-400_mid.webp',\r\n\t\t'/images/10-400_mid.webp',\r\n\t\t'/js/dbhelper.js',\r\n\t\t'/js/main.js',\r\n\t\t'/js/restaurant_info.js',\r\n\t\t'/js/toggleview.js',\r\n\t\t'/js/idb.js'\r\n\t];\r\n\t\r\nif (!String.prototype.startsWith) {\r\n    String.prototype.startsWith = function(searchString, position){\r\n      position = position || 0;\r\n      return this.substr(position, searchString.length) === searchString;\r\n  };\r\n}\r\n\r\nlet dbPromise=idb.open('restraurant_db', 1);\r\n\t\r\nself.addEventListener(\"install\", event => { \r\n\t\r\n\t//return next to last version number for new worker\r\n    event.waitUntil(\r\n\t\tcaches.keys().then(keys => {     \r\n\t\t\tPromise.all(\r\n\t\t\t\told_caches = keys.filter(key => key.startsWith(\"reviews-v\"))\r\n\t\t\t).then(old_caches => {\r\n\t\t\t\tconsole.log(\"Filtered 'reviews' caches\");\r\n\t\t\t\told_caches.forEach((key, index) => {\r\n\t\t\t\t\tversion_num = parseInt(key.substr(key.indexOf(\"-v\") + 2)); \r\n\t\t\t\t\tversions[index] = version_num;   \r\n\t\t\t\t})\r\n\t\t\t\t//get latest version number and add next one\r\n\t\t\t\tversion_num = (Math.max.apply(Math, versions) + 1);\r\n\t\t\t\tversion_num = (isFinite(version_num)===true)? version_num.toString(): '1';\r\n\t\t\t\tconsole.log(\"next version_num: \" + version_num);\r\n\t\t\t\treturn version_num;\r\n\t\t\t}).then(version_num => {\r\n\t\t\t\tconsole.log(\"installing version_num:\" + version_num);\r\n\t\t\t\tcaches.open('reviews-v' + version_num)\r\n\t\t\t\t.then(cache => {\r\n\t\t\t\t\tconsole.log('Opened cache');\r\n\t\t\t\t\tcache.addAll(cacheScope);\r\n\t\t\t\t})\r\n\t\t\t}).then(() => {\r\n\t\t\t\tconsole.log('SW installed');\r\n\t\t\t})\r\n\t\t})\r\n    );\r\n\r\n});\r\n\r\nself.addEventListener(\"fetch\", event => {\r\n\tconsole.log('Fetching');\t\r\n\tif (event.request.method != 'GET') return;\t\t\t\t\t   \r\n\r\n\tevent.respondWith(\r\n\t\tcaches.match(event.request)\r\n\t\t\t.then(function(response) {\r\n\t\t\t\t// Cache hit - return response\r\n\t\t\t\tif (response) {\r\n\t\t\t\t  return response;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar fetchRequestToDB = event.request.clone();\r\n\t\t\t\t\r\n\t\t\t\tdbPromise.then(db => {\r\n\t\t\t\t\tvar tx_read=db.transaction('reviews_get'); \r\n\t\t\t\t\tvar reviewsStore=tx_read.objectStore('reviews_store');\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn storeIndex.get(fetchRequestToDB);\r\n\t\t\t\t}).then(idbResponse => {      \r\n\t\t\t\t\treturn new Response(idbResponse.store_response);\r\n\t\t\t\t}).catch(e => {\r\n\t\t\t\t\tconsole.error(\"IDB Fail: \" + e);\r\n\t\t\t\t})\r\n\r\n\t\t\t\t// IMPORTANT: Clone the request. A request is a stream and\r\n\t\t\t\t// can only be consumed once. Since we are consuming this\r\n\t\t\t\t// once by cache and once by the browser for fetch, we need\r\n\t\t\t\t// to clone the response.\r\n\t\t\t\tvar fetchRequest = event.request.clone();\r\n\r\n\t\t\t\treturn fetch(fetchRequest).then(\r\n\t\t\t\t  function(response) {\r\n\t\t\t\t\t// Check if we received a valid response\r\n\t\t\t\t\tif(!response || response.status !== 200 || response.type !== 'basic') {\r\n\t\t\t\t\t  return response;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// IMPORTANT: Clone the response. A response is a stream\r\n\t\t\t\t\t// and because we want the browser to consume the response\r\n\t\t\t\t\t// as well as the cache consuming the response, we need\r\n\t\t\t\t\t// to clone it so we have two streams.\r\n\t\t\t\t\tvar responseToCache = response.clone();\r\n\t\t\t\t\t\r\n\t\t\t\t\tfetchRequest.json().then( resp => {\r\n\t\t\t\t\t\tdbPromise.then(db => {\r\n\t\t\t\t\t\t\tvar tx_write=db.transaction('reviews_get', 'readwrite'); \r\n\t\t\t\t\t\t\tvar reviewsStore=tx_write.objectStore('reviews_store');\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treviewsStore.put({\r\n\t\t\t\t\t\t\t\tstore_request: event.request,\r\n\t\t\t\t\t\t\t\tstore_response: resp\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\treturn tx_write.complete;\r\n\t\t\t\t\t\t}).then(complete => {      \r\n\t\t\t\t\t\t\tconsole.log(\"db write success: \" + complete);\r\n\t\t\t\t\t\t}).catch(e => {\r\n\t\t\t\t\t\t\tconsole.error(\"IDB Fail: \" + e);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn response;\r\n\t\t\t\t  }\r\n\t\t\t\t);\r\n\t\t\t})\r\n    );\r\n\t\r\n});\r\n\r\nself.addEventListener(\"activate\", event => {\r\n\t//return next to last number for installed worker\r\n    event.waitUntil(\r\n        caches.keys().then(keys => {     \r\n\t\t\tPromise.all(\r\n\t\t\t\told_caches = keys.filter(key => key.startsWith(\"reviews-v\"))\r\n\t\t\t).then(old_caches => {\r\n\t\t\t\told_caches.forEach((key, index) => {\r\n\t\t\t\t\tversion_num = parseInt(key.substr(key.indexOf(\"-v\") + 2)); \r\n\t\t\t\t\tversions[index] = version_num;   \r\n\t\t\t\t})\r\n\t\t\t\t//get latest version number and add next one\r\n\t\t\t\tversion_num = Math.max.apply(Math, versions).toString();\r\n\t\t\t\tconsole.log(\"last version_num: \" + version_num);\r\n\t\t\t\treturn version_num;\r\n\t\t\t}).then(version_num => {\r\n\t\t\t\tconsole.log(\"activating version_num:\" + version_num);\r\n\t\t\t\tcaches.keys().then(keys => {\r\n\t\t\t\t\treturn keys.filter(key => {key.startsWith(\"reviews-v\") && !key.endsWith(version_num)});\r\n\t\t\t\t}).then(keys => {\r\n\t\t\t\t\tconsole.log(\"removing old caches\");\r\n\t\t\t\t\treturn Promise.all(\r\n\t\t\t\t\t\tkeys.map(key => {\r\n\t\t\t\t\t\t\treturn key.delete(key);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\tconsole.log('SW activated.');\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t})\r\n    );\t\r\n});"],"sourceRoot":""}